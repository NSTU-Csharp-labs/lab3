using System;using System.Collections.Generic;using System.Reactive;using System.Reactive.Linq;using lab3.Controls.GL;using ReactiveUI;using ReactiveUI.Fody.Helpers;namespace lab3.Controls.MainWindow;public class FilterButtonViewModel{    [Reactive]    public bool IsEnabled { get; private set; }    public IObservable<IEnumerable<Filter>> EnabledFilters { get; }    public IObservable<ImgBitmap> ImgBitmap { get; }    public string Title { get; }        public FilterButtonViewModel(IObservable<IEnumerable<Filter>> enabledFilters, Filter currentFilter, ImageManager imageManager)    {        EnabledFilters = enabledFilters.Select(filters => new List<Filter>(filters) { currentFilter });        Title = currentFilter.Title;        ImgBitmap = imageManager.BitmapChanged;                Switch = ReactiveCommand.Create(() =>        {            IsEnabled = !IsEnabled;            if (IsEnabled)            {                imageManager.FiltersManager.EnableFilter(currentFilter);            }            else            {                imageManager.FiltersManager.DisableFilter(currentFilter);            }        });    }        public ReactiveCommand<Unit, Unit> Switch { get; }}